"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},47282:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const a={},o="Getting Started",l={unversionedId:"GettingStarted",id:"GettingStarted",title:"Getting Started",description:"Creating Tests",source:"@site/docs/GettingStarted.md",sourceDirName:".",slug:"/GettingStarted",permalink:"/midori/docs/GettingStarted",draft:!1,editUrl:"https://github.com/nezuo/midori/edit/master/docs/GettingStarted.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Midori",permalink:"/midori/docs/intro"}},s={},u=[{value:"Creating Tests",id:"creating-tests",level:3},{value:"Running Tests",id:"running-tests",level:3},{value:"Debugging Tests",id:"debugging-tests",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("h3",{id:"creating-tests"},"Creating Tests"),(0,i.kt)("p",null,"First, create a module with a ",(0,i.kt)("inlineCode",{parentName:"p"},".test")," suffix. This module will return a function that when called will create your tests."),(0,i.kt)("p",null,"A simple test module might look like this:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Module.test.lua")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'return function(x)\n    x.test("1 == 1", function()\n        assert(1 == 1)\n    end)\nend\n')),(0,i.kt)("h3",{id:"running-tests"},"Running Tests"),(0,i.kt)("p",null,"To run your tests, call ",(0,i.kt)("inlineCode",{parentName:"p"},"Midori.runTests")," with an instance. Midori will find all ",(0,i.kt)("inlineCode",{parentName:"p"},".test")," modules inside that instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal Midori = require(ReplicatedStorge.Packages.Midori)\n\nMidori.runTests(ReplicatedStorage.YourLibrary)\n')),(0,i.kt)("h3",{id:"debugging-tests"},"Debugging Tests"),(0,i.kt)("p",null,"To isolate certain tests, Midori provides a ",(0,i.kt)("inlineCode",{parentName:"p"},"testFOCUS")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"testSKIP")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'return function(x)\n    -- Only tests that have been called with `testFOCUS` will run.\n    x.testFOCUS("focus" function() end)\nend\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'return function(x)\n    -- This test will not run.\n    x.testSKIP("skip" function() end)\nend\n')))}p.isMDXComponent=!0}}]);